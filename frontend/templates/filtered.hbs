<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="filtered.css">
    <title>Filtered Recipes</title>
</head>
<body>
    <nav class="navbar">
        <div id="userProfile">
            {{#if user.profile_picture}}
                <img src="/uploads/{{user.profile_picture}}" alt="Profile Picture" id="profilePicture">
                <a href="/" id="logoutLink">Logout</a>
            {{else}}
                <p></p>
            {{/if}}
        </div>

        <button id="generateMealsBtn">View Filtered Recipes</button>
    </nav>

    <div id="mealsContainer"></div>

    <button id="saveRecipesBtn">Save Selected Recipes</button>

    <script>
        // Object to hold the selected recipes
        const selectedRecipes = {
            username: '{{user.username}}',
            recipes: []
        };

<<<<<<< Updated upstream
    try {
        const response = await fetch(`/meal_plan?days=${days}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        });
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }

        const data = await response.json();
        displayMealPlan(data);
        console.log('Meal Plan:', data);
    } catch (error) {
        console.error('Error fetching meal plan:', error);
    }   
});

// Display the meal plan on the page
function displayMealPlan(data) {
    const mealPlanContainer = document.getElementById('mealPlanContainer');
    mealPlanContainer.innerHTML = '';

    // Display the meal plan on the page
    if (data.mealPlan && data.mealPlan.length > 0) {
        data.mealPlan.forEach((dayMeals, index) => {
            const dayDiv = document.createElement('div');
            dayDiv.className = 'day-meal-plan';
            dayDiv.innerHTML = `<h2>Day ${index + 1}</h2>`;

            // Display breakfast, lunch, and dinner meals
            ['breakfast', 'lunch', 'dinner'].forEach(mealType => {
                const mealData = dayMeals[mealType];
                const mealDiv = document.createElement('div');
                mealDiv.className = 'meal';

                // Display meal data
                if (mealData) {
                    mealDiv.innerHTML = `
                        <h3>${mealType.charAt(0).toUpperCase() + mealType.slice(1)}: ${mealData.title}</h3>
                        <img src="${mealData.image}" alt="${mealData.title}" style="width:200px;">
                        <p><strong>Used Ingredients:</strong> ${mealData.usedIngredients.map(i => i.name).join(', ')}</p>
                        <p><strong>Missed Ingredients:</strong> ${mealData.missedIngredients.map(i => i.name).join(', ')}</p>
                        <p><strong>Instructions:</strong> ${mealData.instructions}</p>
                        <p><strong>Number of Ingredients Left:</strong> ${mealData.availableIngredients_Left.length}</p>
                        <p><strong>Ingredients Left:</strong> ${mealData.availableIngredients_Left}</p>`;
                        
                } else {
                    mealDiv.innerHTML = `<h3>${mealType.charAt(0).toUpperCase() + mealType.slice(1)}: No recipe available</h3>`;
=======
        // Function to update the selectedRecipes object
        function updateSelectedRecipes(mealTitle, isChecked) {
            if (isChecked) {
                if (!selectedRecipes.recipes.includes(mealTitle)) {
                    selectedRecipes.recipes.push(mealTitle);
>>>>>>> Stashed changes
                }
            } else {
                selectedRecipes.recipes = selectedRecipes.recipes.filter(recipe => recipe !== mealTitle);
            }
        }

        // Display the meals on the page
        document.getElementById('generateMealsBtn').addEventListener('click', async () => {
            try {
                const response = await fetch('/filter_meals', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }

                const data = await response.json();
                console.log('Meals:', data.meals);

                // Display the meals on the page
                const mealsContainer = document.getElementById('mealsContainer');
                mealsContainer.innerHTML = ''; // Clear previous meals

                data.meals.forEach((meal, index) => {
                    const mealDiv = document.createElement('div');
                    mealDiv.innerHTML = `
                        <input type="checkbox" id="meal_${index + 1}" name="selectedMeals" value="${meal.title}">
                        <label for="meal_${index + 1}"><h3>${index + 1}. ${meal.title}</h3></label>
                        <img src="${meal.image}" alt="${meal.title}" style="width:200px;">
                        <p><strong>Used Ingredients:</strong> ${meal.usedIngredients.map(i => `${i.name} (${i.amount} ${i.unit})`).join(', ')}</p>
                        <p><strong>Missed Ingredients:</strong> ${meal.missedIngredients.map(i => `${i.name} (${i.amount} ${i.unit})`).join(', ')}</p>
                        <p><strong>Instructions:</strong> ${meal.instructions}</p>
                    `;
                    mealsContainer.appendChild(mealDiv);

                    // Add event listener to the checkbox
                    const checkbox = mealDiv.querySelector(`#meal_${index + 1}`);
                    checkbox.addEventListener('change', (event) => {
                        const isChecked = event.target.checked;
                        updateSelectedRecipes(meal.title, isChecked);
                    });
                });
            } catch (error) {
                console.error('Error:', error);
            }
        });

        // Send the selected recipes to the server when the Save button is clicked
        document.getElementById('saveRecipesBtn').addEventListener('click', async () => {
            try {
                const response = await fetch('/save_recipes', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(selectedRecipes)
                });

                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }

                const result = await response.json();
                alert(result.message);
            } catch (error) {
                console.error('Error saving recipes:', error);
            }
        });
    </script>
</body>
</html>

